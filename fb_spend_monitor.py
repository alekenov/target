import os
from datetime import datetime, timedelta
import requests
from facebook_business.api import FacebookAdsApi
from facebook_business.adobjects.adaccount import AdAccount
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def init_facebook_api():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Facebook API"""
    try:
        access_token = os.getenv('FB_ACCESS_TOKEN')
        if not access_token:
            raise ValueError("FB_ACCESS_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
            
        account_id = os.getenv('FB_ACCOUNT_ID')
        if not account_id:
            raise ValueError("FB_ACCOUNT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
            
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API —Ç–æ–ª—å–∫–æ —Å access_token
        FacebookAdsApi.init(access_token=access_token)
        
        # –£–±–∏—Ä–∞–µ–º 'act_' –∏–∑ ID –∞–∫–∫–∞—É–Ω—Ç–∞ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        account_id = account_id.replace('act_', '')
        return f'act_{account_id}'
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Facebook API: {str(e)}")
        raise

def get_active_campaigns(account_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π –∏ –∏—Ö –º–µ—Ç—Ä–∏–∫"""
    try:
        account = AdAccount(account_id)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π
        campaigns = account.get_campaigns(
            params={
                'effective_status': ['ACTIVE'],
                'fields': [
                    'name',
                    'objective',
                    'status',
                    'created_time'
                ]
            }
        )
        
        campaign_data = []
        
        for campaign in campaigns:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–∂–¥–æ–π –∫–∞–º–ø–∞–Ω–∏–∏
            insights = campaign.get_insights(
                params={
                    'fields': [
                        'spend',
                        'impressions',
                        'clicks',
                        'reach'
                    ],
                    'date_preset': 'today'
                }
            )
            
            stats = insights[0] if insights else {'spend': '0', 'impressions': '0', 'clicks': '0', 'reach': '0'}
            
            campaign_data.append({
                'id': campaign['id'],
                'name': campaign['name'],
                'status': campaign['status'],
                'spend': float(stats.get('spend', 0)),
                'impressions': int(stats.get('impressions', 0)),
                'clicks': int(stats.get('clicks', 0)),
                'reach': int(stats.get('reach', 0))
            })
            
        return campaign_data
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π: {str(e)}")
        return None

def format_number(num):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞"""
    if num >= 1000000:
        return f"{num/1000000:.1f}M"
    elif num >= 1000:
        return f"{num/1000:.1f}K"
    return str(num)

def send_telegram_message(message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram"""
    bot_token = os.getenv('TELEGRAM_BOT_TOKEN')
    chat_id = os.getenv('TELEGRAM_CHAT_ID')
    
    try:
        url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
        payload = {
            "chat_id": chat_id,
            "text": message,
            "parse_mode": "HTML"
        }
        response = requests.post(url, json=payload)
        response.raise_for_status()
        print("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {str(e)}")

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Facebook API
    account_id = init_facebook_api()
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–± –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏—è—Ö
    campaigns = get_active_campaigns(account_id)
    
    if campaigns:
        current_time = datetime.now()
        
        # –ü–æ–¥—Å—á–µ—Ç –æ–±—â–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
        total_spend = sum(c['spend'] for c in campaigns)
        total_impressions = sum(c['impressions'] for c in campaigns)
        total_clicks = sum(c['clicks'] for c in campaigns)
        total_reach = sum(c['reach'] for c in campaigns)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        message = f"üìä <b>–û—Ç—á–µ—Ç –ø–æ –∞–∫—Ç–∏–≤–Ω—ã–º –∫–∞–º–ø–∞–Ω–∏—è–º Facebook Ads</b>\n\n"
        message += f"üí∞ –û–±—â–∏–µ —Ç—Ä–∞—Ç—ã –∑–∞ —Å–µ–≥–æ–¥–Ω—è: ${total_spend:.2f}\n"
        message += f"üë• –û—Ö–≤–∞—Ç: {format_number(total_reach)}\n"
        message += f"üëÅ –ü–æ–∫–∞–∑—ã: {format_number(total_impressions)}\n"
        message += f"üñ± –ö–ª–∏–∫–∏: {format_number(total_clicks)}\n\n"
        
        message += "<b>–ê–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏:</b>\n"
        for campaign in campaigns:
            message += f"\nüéØ <b>{campaign['name']}</b>\n"
            message += f"‚îú –¢—Ä–∞—Ç—ã: ${campaign['spend']:.2f}\n"
            message += f"‚îú –ü–æ–∫–∞–∑—ã: {format_number(campaign['impressions'])}\n"
            message += f"‚îú –ö–ª–∏–∫–∏: {format_number(campaign['clicks'])}\n"
            message += f"‚îî –û—Ö–≤–∞—Ç: {format_number(campaign['reach'])}\n"
        
        message += f"\nüìÖ –î–∞—Ç–∞: {current_time.strftime('%Y-%m-%d')}\n"
        message += f"‚è∞ –í—Ä–µ–º—è –æ—Ç—á–µ—Ç–∞: {current_time.strftime('%H:%M:%S')}\n"
        message += f"üì± –†–µ–∫–ª–∞–º–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç: {account_id}"
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
        send_telegram_message(message)
    else:
        error_message = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–∞–º–ø–∞–Ω–∏—è—Ö –∏–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π"
        send_telegram_message(error_message)

if __name__ == "__main__":
    main() 