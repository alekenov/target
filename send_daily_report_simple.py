import os
import sys
import logging
from datetime import datetime
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from facebook_ads_toolkit.auth.facebook_auth import initialize_api
from facebook_ads_toolkit.reports.report_generator import get_campaigns_list
from facebook_ads_toolkit.telegram.telegram_sender import send_telegram_message

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

logger = logging.getLogger(__name__)

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞.
    """
    logger.info("–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Facebook API
    logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Facebook API")
    account_id = initialize_api()
    logger.info(f"Facebook API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ê–∫–∫–∞—É–Ω—Ç: {account_id}")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –∫–∞–º–ø–∞–Ω–∏—è—Ö
    logger.info("–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–∞–º–ø–∞–Ω–∏—è—Ö")
    campaigns = get_campaigns_list(status='ACTIVE')
    
    if not campaigns:
        logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–∞–º–ø–∞–Ω–∏–π")
        message = "‚ö†Ô∏è *–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç*\n\n–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–∞–º–ø–∞–Ω–∏—è—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API –∏ –¥–æ—Å—Ç—É–ø –∫ —Ä–µ–∫–ª–∞–º–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É."
    else:
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(campaigns)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        message = "*üìä –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Ä–µ–∫–ª–∞–º–Ω—ã–º –∫–∞–º–ø–∞–Ω–∏—è–º*\n\n"
        message += f"–î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y')}\n"
        message += f"–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π: {len(campaigns)}\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–π –∫–∞–º–ø–∞–Ω–∏–∏
        for i, campaign in enumerate(campaigns, 1):
            campaign_data = campaign
            
            # –ü–æ–ª—É—á–∞–µ–º –±—é–¥–∂–µ—Ç
            budget = "–ù–µ —É–∫–∞–∑–∞–Ω"
            if 'daily_budget' in campaign_data and campaign_data['daily_budget']:
                budget = f"{float(campaign_data['daily_budget'])/100:.2f} USD/–¥–µ–Ω—å"
            elif 'lifetime_budget' in campaign_data and campaign_data['lifetime_budget']:
                budget = f"{float(campaign_data['lifetime_budget'])/100:.2f} USD (–Ω–∞ –≤–µ—Å—å –ø–µ—Ä–∏–æ–¥)"
            
            message += f"*{i}. {campaign_data.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}*\n"
            message += f"ID: `{campaign_data.get('id', '–ù/–î')}`\n"
            message += f"–°—Ç–∞—Ç—É—Å: {campaign_data.get('effective_status', '–ù/–î')}\n"
            message += f"–ë—é–¥–∂–µ—Ç: {budget}\n"
            
            if i < len(campaigns):
                message += "\n"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram
    channel_id = os.environ.get('TELEGRAM_LOG_CHANNEL_ID')
    logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª {channel_id}")
    
    result = send_telegram_message(channel_id, message)
    if result:
        logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    else:
        logger.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è")

if __name__ == "__main__":
    main() 