#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import sys
import logging
from datetime import datetime, timedelta
import traceback

# –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from facebook_ads_toolkit.auth.facebook_auth import FacebookAuth
from facebook_ads_toolkit.reports.report_generator import get_campaigns_list, get_campaign_insights
from facebook_ads_toolkit.integrations.telegram_integration import send_telegram_message

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
)
logger = logging.getLogger(__name__)

def format_currency(value):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ –≤–∞–ª—é—Ç—É."""
    if value is None:
        return "0.00 ‚ÇΩ"
    return f"{float(value):.2f} ‚ÇΩ"

def format_percentage(value):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∫ –ø—Ä–æ—Ü–µ–Ω—Ç."""
    if value is None:
        return "0.00%"
    return f"{float(value) * 100:.2f}%"

def get_weekly_report():
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Ä–µ–∫–ª–∞–º–Ω—ã–º –∫–∞–º–ø–∞–Ω–∏—è–º."""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Facebook API
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Facebook API")
        auth = FacebookAuth()
        api = auth.get_api()
        account = auth.get_ad_account()
        logger.info(f"Facebook API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ê–∫–∫–∞—É–Ω—Ç: {account.get_id()}")

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–∞–º–ø–∞–Ω–∏—è—Ö
        logger.info("–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–∞–º–ø–∞–Ω–∏—è—Ö")
        campaigns = get_campaigns_list(account, status=['ACTIVE'])
        
        if not campaigns:
            logger.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∫–∞–º–ø–∞–Ω–∏—è—Ö –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞")
            return "‚ö†Ô∏è *–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç*\n\n–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞."
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(campaigns)} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π")
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∞—Ç –¥–ª—è –æ—Ç—á–µ—Ç–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π)
        end_date = datetime.now().date()
        start_date = end_date - timedelta(days=7)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á–µ—Ç–∞
        report = f"üìä *–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Ä–µ–∫–ª–∞–º–Ω—ã–º –∫–∞–º–ø–∞–Ω–∏—è–º*\n"
        report += f"*–ü–µ—Ä–∏–æ–¥:* {start_date.strftime('%d.%m.%Y')} - {end_date.strftime('%d.%m.%Y')}\n\n"
        
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total_spend = 0
        total_impressions = 0
        total_clicks = 0
        total_conversions = 0
        
        # –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞–∂–¥–æ–π –∫–∞–º–ø–∞–Ω–∏–∏
        campaign_data = []
        
        for campaign in campaigns:
            try:
                # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Å–∞–π—Ç–æ–≤ –ø–æ –∫–∞–º–ø–∞–Ω–∏–∏
                insights = get_campaign_insights(
                    account, 
                    campaign['id'], 
                    start_date.strftime('%Y-%m-%d'), 
                    end_date.strftime('%Y-%m-%d')
                )
                
                if not insights:
                    continue
                
                # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫
                spend = insights.get('spend', 0)
                impressions = insights.get('impressions', 0)
                clicks = insights.get('clicks', 0)
                conversions = insights.get('actions', [])
                conversion_count = sum(action.get('value', 0) for action in conversions if action.get('action_type') == 'offsite_conversion')
                
                # –†–∞—Å—á–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫
                ctr = clicks / impressions if impressions > 0 else 0
                cpc = float(spend) / clicks if clicks > 0 else 0
                cpm = float(spend) / impressions * 1000 if impressions > 0 else 0
                
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
                total_spend += float(spend)
                total_impressions += impressions
                total_clicks += clicks
                total_conversions += conversion_count
                
                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–∏
                campaign_data.append({
                    'name': campaign['name'],
                    'spend': float(spend),
                    'impressions': impressions,
                    'clicks': clicks,
                    'conversions': conversion_count,
                    'ctr': ctr,
                    'cpc': cpc,
                    'cpm': cpm
                })
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–∏ {campaign['name']}: {str(e)}")
                logger.error(traceback.format_exc())
        
        # –†–∞—Å—á–µ—Ç –æ–±—â–∏—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
        overall_ctr = total_clicks / total_impressions if total_impressions > 0 else 0
        overall_cpc = total_spend / total_clicks if total_clicks > 0 else 0
        overall_cpm = total_spend / total_impressions * 1000 if total_impressions > 0 else 0
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ –æ—Ç—á–µ—Ç
        report += f"*–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n"
        report += f"üí∞ –†–∞—Å—Ö–æ–¥—ã: {format_currency(total_spend)}\n"
        report += f"üëÅ –ü–æ–∫–∞–∑—ã: {total_impressions:,}\n"
        report += f"üñ± –ö–ª–∏–∫–∏: {total_clicks:,}\n"
        report += f"üéØ –ö–æ–Ω–≤–µ—Ä—Å–∏–∏: {total_conversions:,}\n"
        report += f"üìà CTR: {format_percentage(overall_ctr)}\n"
        report += f"üí∏ CPC: {format_currency(overall_cpc)}\n"
        report += f"üìä CPM: {format_currency(overall_cpm)}\n\n"
        
        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∫–∞–º–ø–∞–Ω–∏–π –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º (–æ—Ç –±–æ–ª—å—à–µ–≥–æ –∫ –º–µ–Ω—å—à–µ–º—É)
        campaign_data.sort(key=lambda x: x['spend'], reverse=True)
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–ø-5 –∫–∞–º–ø–∞–Ω–∏–π –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º
        report += f"*–¢–æ–ø-5 –∫–∞–º–ø–∞–Ω–∏–π –ø–æ —Ä–∞—Å—Ö–æ–¥–∞–º:*\n"
        for i, campaign in enumerate(campaign_data[:5], 1):
            report += f"{i}. *{campaign['name']}*\n"
            report += f"   üí∞ –†–∞—Å—Ö–æ–¥—ã: {format_currency(campaign['spend'])}\n"
            report += f"   üëÅ –ü–æ–∫–∞–∑—ã: {campaign['impressions']:,}\n"
            report += f"   üñ± –ö–ª–∏–∫–∏: {campaign['clicks']:,}\n"
            report += f"   üìà CTR: {format_percentage(campaign['ctr'])}\n"
            report += f"   üí∏ CPC: {format_currency(campaign['cpc'])}\n\n"
        
        # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö
        report += "*–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:*\n"
        
        # –ö–∞–º–ø–∞–Ω–∏–∏ —Å –≤—ã—Å–æ–∫–∏–º CPC
        high_cpc_campaigns = [c for c in campaign_data if c['cpc'] > overall_cpc * 1.5 and c['clicks'] > 10]
        if high_cpc_campaigns:
            report += "‚ö†Ô∏è –ö–∞–º–ø–∞–Ω–∏–∏ —Å –≤—ã—Å–æ–∫–∏–º CPC (—Ç—Ä–µ–±—É—é—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏):\n"
            for campaign in high_cpc_campaigns[:3]:  # –¢–æ–ø-3 —Å –≤—ã—Å–æ–∫–∏–º CPC
                report += f"- {campaign['name']}: {format_currency(campaign['cpc'])}\n"
            report += "\n"
        
        # –ö–∞–º–ø–∞–Ω–∏–∏ —Å –Ω–∏–∑–∫–∏–º CTR
        low_ctr_campaigns = [c for c in campaign_data if c['ctr'] < overall_ctr * 0.7 and c['impressions'] > 1000]
        if low_ctr_campaigns:
            report += "‚ö†Ô∏è –ö–∞–º–ø–∞–Ω–∏–∏ —Å –Ω–∏–∑–∫–∏–º CTR (—Ç—Ä–µ–±—É—é—Ç —É–ª—É—á—à–µ–Ω–∏—è –∫—Ä–µ–∞—Ç–∏–≤–æ–≤):\n"
            for campaign in low_ctr_campaigns[:3]:  # –¢–æ–ø-3 —Å –Ω–∏–∑–∫–∏–º CTR
                report += f"- {campaign['name']}: {format_percentage(campaign['ctr'])}\n"
            report += "\n"
        
        # –£—Å–ø–µ—à–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
        good_campaigns = [c for c in campaign_data if c['ctr'] > overall_ctr * 1.3 and c['cpc'] < overall_cpc * 0.8]
        if good_campaigns:
            report += "‚úÖ –£—Å–ø–µ—à–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–≤–µ–ª–∏—á–∏—Ç—å –±—é–¥–∂–µ—Ç):\n"
            for campaign in good_campaigns[:3]:  # –¢–æ–ø-3 —É—Å–ø–µ—à–Ω—ã—Ö
                report += f"- {campaign['name']}: CTR {format_percentage(campaign['ctr'])}, CPC {format_currency(campaign['cpc'])}\n"
        
        return report
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {str(e)}")
        logger.error(traceback.format_exc())
        return f"‚ö†Ô∏è *–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞*\n\n{str(e)}"

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞."""
    logger.info("–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞")
    
    try:
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞
        report = get_weekly_report()
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –≤ Telegram
        channel_id = os.getenv("TELEGRAM_LOG_CHANNEL_ID")
        if channel_id:
            logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ Telegram –∫–∞–Ω–∞–ª {channel_id}")
            response = send_telegram_message(channel_id, report, parse_mode="Markdown")
            logger.info(f"–û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –û—Ç–≤–µ—Ç: {response.status_code} {response.reason}")
        else:
            logger.warning("ID –∫–∞–Ω–∞–ª–∞ Telegram –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
            print(report)
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {str(e)}")
        logger.error(traceback.format_exc())

if __name__ == "__main__":
    main() 