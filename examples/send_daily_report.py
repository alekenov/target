#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ Telegram –∫–∞–Ω–∞–ª.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π
Facebook –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π Telegram –∫–∞–Ω–∞–ª.
"""

import os
import logging
import asyncio
import traceback
from datetime import datetime
from dotenv import load_dotenv

from telegram import Bot

from facebook_ads_toolkit.telegram_integration.report_sender import ReportSender
from facebook_ads_toolkit.telegram_integration.config import (
    TELEGRAM_BOT_TOKEN,
    TELEGRAM_LOG_CHANNEL_ID,
    LOG_LEVEL,
    LOG_FORMAT
)
from facebook_ads_toolkit.auth.facebook_auth import FacebookAuth

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=LOG_LEVEL if isinstance(LOG_LEVEL, int) else getattr(logging, LOG_LEVEL, logging.INFO),
    format=LOG_FORMAT
)
logger = logging.getLogger(__name__)

def check_environment():
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.
    
    Returns:
        bool: True, –µ—Å–ª–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã, –∏–Ω–∞—á–µ False.
    """
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
    load_dotenv()
    
    required_vars = [
        'FACEBOOK_APP_ID',
        'FACEBOOK_APP_SECRET',
        'FACEBOOK_ACCESS_TOKEN',
        'FACEBOOK_AD_ACCOUNT_ID',
        'TELEGRAM_BOT_TOKEN',
        'TELEGRAM_LOG_CHANNEL_ID'
    ]
    
    missing_vars = []
    for var in required_vars:
        if not os.getenv(var):
            missing_vars.append(var)
    
    if missing_vars:
        logger.error(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {', '.join(missing_vars)}")
        logger.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –Ω–µ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.")
        return False
    
    # –í—ã–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–±–µ–∑ —Ç–æ–∫–µ–Ω–æ–≤)
    logger.info(f"TELEGRAM_LOG_CHANNEL_ID: {TELEGRAM_LOG_CHANNEL_ID}")
    logger.info(f"FACEBOOK_AD_ACCOUNT_ID: {os.getenv('FACEBOOK_AD_ACCOUNT_ID')}")
    
    return True

async def send_direct_message_to_channel(message):
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞–ø—Ä—è–º—É—é –≤ Telegram –∫–∞–Ω–∞–ª.
    
    Args:
        message (str): –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.
    """
    try:
        logger.info(f"–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª {TELEGRAM_LOG_CHANNEL_ID}")
        logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–∫–µ–Ω –±–æ—Ç–∞: {'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if TELEGRAM_BOT_TOKEN else '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        
        bot = Bot(token=TELEGRAM_BOT_TOKEN)
        logger.info("–ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç
        me = await bot.get_me()
        logger.info(f"–ë–æ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫: {me.username}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.send_message(
            chat_id=TELEGRAM_LOG_CHANNEL_ID,
            text=message,
            parse_mode='Markdown'
        )
        logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª {TELEGRAM_LOG_CHANNEL_ID}")
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        logger.error(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        logger.error(f"–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤: {traceback.format_exc()}")
        return False

async def send_daily_report():
    """
    –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ Telegram –∫–∞–Ω–∞–ª.
    """
    logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Facebook API
    try:
        auth = FacebookAuth()
        auth.initialize()
        logger.info(f"Facebook API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ê–∫–∫–∞—É–Ω—Ç: {auth.get_ad_account_id()}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Facebook API: {e}")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        await send_direct_message_to_channel(
            "‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞*\n\n"
            "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Facebook API. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞."
        )
        return
    
    # –°–æ–∑–¥–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –æ—Ç—á–µ—Ç–æ–≤
    report_sender = ReportSender()
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç
    try:
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤ –∫–∞–Ω–∞–ª {TELEGRAM_LOG_CHANNEL_ID}")
        success = await report_sender.send_daily_report(TELEGRAM_LOG_CHANNEL_ID)
        
        if success:
            logger.info("–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        else:
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–π –æ—Ç—á–µ—Ç, –µ—Å–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –æ—Ç—á–µ—Ç –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å
            current_date = datetime.now().strftime('%d.%m.%Y')
            message = (
                f"üìä *–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Ä–µ–∫–ª–∞–º–Ω—ã–º –∫–∞–º–ø–∞–Ω–∏—è–º Facebook*\n"
                f"üìÖ –î–∞—Ç–∞: {current_date}\n\n"
                f"‚ö†Ô∏è *–í–Ω–∏–º–∞–Ω–∏–µ:* –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ—Ç Facebook API.\n\n"
                f"–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
                f"‚Ä¢ –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –∏–ª–∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞\n"
                f"‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–∫–ª–∞–º–Ω–æ–º—É –∞–∫–∫–∞—É–Ω—Ç—É\n"
                f"‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ Facebook API\n\n"
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            )
            
            logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞")
            await send_direct_message_to_channel(message)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞: {e}")
        logger.error(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
        logger.error(f"–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤: {traceback.format_exc()}")
        
        await send_direct_message_to_channel(
            "‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞*\n\n"
            f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
        )

async def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞.
    """
    logger.info("–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if not check_environment():
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç
    await send_daily_report()

if __name__ == "__main__":
    asyncio.run(main()) 