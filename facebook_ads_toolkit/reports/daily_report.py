#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤.
"""

import logging
from datetime import datetime, timedelta

from facebook_ads_toolkit.reports.report_base import ReportBase

logger = logging.getLogger(__name__)

class DailyReport(ReportBase):
    """–ö–ª–∞—Å—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤."""
    
    def generate(self) -> str:
        """
        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞.
        
        Returns:
            str: –¢–µ–∫—Å—Ç –æ—Ç—á–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown
        """
        today = datetime.now().replace(hour=0, minute=0, second=0, microsecond=0)
        yesterday = today - timedelta(days=1)
        week_ago = today - timedelta(days=7)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        today_stats = self._get_total_stats(today, today)
        yesterday_stats = self._get_total_stats(yesterday, yesterday)
        week_stats = self._get_total_stats(week_ago, today)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report = [
            "*üìä –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Ä–µ–∫–ª–∞–º–µ*",
            f"_–î–∞—Ç–∞: {today.strftime('%d.%m.%Y')}_\n"
        ]
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        report.extend([
            "*–û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:*",
            f"üí∞ –†–∞—Å—Ö–æ–¥—ã: {self._format_currency(today_stats['total_spend'])} "
            f"{self._get_trend_indicator(today_stats['total_spend'], yesterday_stats['total_spend'])} "
            f"({self._format_change(today_stats['total_spend'], yesterday_stats['total_spend'])})",
            
            f"üë• –ü–æ–∫–∞–∑—ã: {today_stats['total_impressions']:,} "
            f"{self._get_trend_indicator(today_stats['total_impressions'], yesterday_stats['total_impressions'])} "
            f"({self._format_change(today_stats['total_impressions'], yesterday_stats['total_impressions'])})",
            
            f"üñ± –ö–ª–∏–∫–∏: {today_stats['total_clicks']:,} "
            f"{self._get_trend_indicator(today_stats['total_clicks'], yesterday_stats['total_clicks'])} "
            f"({self._format_change(today_stats['total_clicks'], yesterday_stats['total_clicks'])})\n"
        ])
        
        # –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        report.extend([
            "*–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:*",
            f"üìà CTR: {self._format_percentage(today_stats['avg_ctr'])} "
            f"{self._get_trend_indicator(today_stats['avg_ctr'], yesterday_stats['avg_ctr'])}",
            
            f"üíµ CPC: {self._format_currency(today_stats['avg_cpc'])} "
            f"{self._get_trend_indicator(today_stats['avg_cpc'], yesterday_stats['avg_cpc'])}\n"
        ])
        
        # –ö–æ–Ω–≤–µ—Ä—Å–∏–∏
        if today_stats['total_conversions'] > 0:
            report.extend([
                "*–ö–æ–Ω–≤–µ—Ä—Å–∏–∏:*",
                f"üéØ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {today_stats['total_conversions']:,} "
                f"{self._get_trend_indicator(today_stats['total_conversions'], yesterday_stats['total_conversions'])}",
                
                f"üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å: {self._format_currency(today_stats['avg_cost_per_conversion'])} "
                f"{self._get_trend_indicator(today_stats['avg_cost_per_conversion'], yesterday_stats['avg_cost_per_conversion'])}\n"
            ])
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–º–ø–∞–Ω–∏—è–º
        campaigns = self._get_campaign_stats(today, today)
        if campaigns:
            report.append("*–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–º–ø–∞–Ω–∏—è–º:*")
            for campaign in campaigns[:5]:  # –¢–æ–ø 5 –∫–∞–º–ø–∞–Ω–∏–π
                report.append(
                    f"üì± {campaign['campaign_name']}\n"
                    f"   –†–∞—Å—Ö–æ–¥—ã: {self._format_currency(campaign['spend'])}\n"
                    f"   –ü–æ–∫–∞–∑—ã: {campaign['impressions']:,}\n"
                    f"   CTR: {self._format_percentage(campaign['ctr'])}"
                )
        
        return "\n".join(report)
