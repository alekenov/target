#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —á–∞—Å–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤.
"""

import logging
from datetime import datetime, timedelta

from facebook_ads_toolkit.reports.report_base import ReportBase

logger = logging.getLogger(__name__)

class HourlyReport(ReportBase):
    """–ö–ª–∞—Å—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —á–∞—Å–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤."""
    
    def generate(self) -> str:
        """
        –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–∞—Å–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞.
        
        Returns:
            str: –¢–µ–∫—Å—Ç –æ—Ç—á–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown
        """
        now = datetime.now().replace(minute=0, second=0, microsecond=0)
        previous_hour = now - timedelta(hours=1)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        current_stats = self._get_total_stats(now, now)
        previous_stats = self._get_total_stats(previous_hour, previous_hour)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç
        report = [
            "*‚ö° –ß–∞—Å–æ–≤–æ–π –æ—Ç—á–µ—Ç –ø–æ —Ä–µ–∫–ª–∞–º–µ*",
            f"_–í—Ä–µ–º—è: {now.strftime('%H:%M %d.%m.%Y')}_\n"
        ]
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        report.extend([
            "*–¢–µ–∫—É—â–∏–π —á–∞—Å:*",
            f"üí∞ –†–∞—Å—Ö–æ–¥—ã: {self._format_currency(current_stats['total_spend'])} "
            f"{self._get_trend_indicator(current_stats['total_spend'], previous_stats['total_spend'])} "
            f"({self._format_change(current_stats['total_spend'], previous_stats['total_spend'])})",
            
            f"üë• –ü–æ–∫–∞–∑—ã: {current_stats['total_impressions']:,} "
            f"{self._get_trend_indicator(current_stats['total_impressions'], previous_stats['total_impressions'])} "
            f"({self._format_change(current_stats['total_impressions'], previous_stats['total_impressions'])})",
            
            f"üñ± –ö–ª–∏–∫–∏: {current_stats['total_clicks']:,} "
            f"{self._get_trend_indicator(current_stats['total_clicks'], previous_stats['total_clicks'])} "
            f"({self._format_change(current_stats['total_clicks'], previous_stats['total_clicks'])})\n"
        ])
        
        # –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        report.extend([
            "*–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:*",
            f"üìà CTR: {self._format_percentage(current_stats['avg_ctr'])} "
            f"{self._get_trend_indicator(current_stats['avg_ctr'], previous_stats['avg_ctr'])}",
            
            f"üíµ CPC: {self._format_currency(current_stats['avg_cpc'])} "
            f"{self._get_trend_indicator(current_stats['avg_cpc'], previous_stats['avg_cpc'])}\n"
        ])
        
        # –ö–æ–Ω–≤–µ—Ä—Å–∏–∏
        if current_stats['total_conversions'] > 0:
            report.extend([
                "*–ö–æ–Ω–≤–µ—Ä—Å–∏–∏:*",
                f"üéØ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {current_stats['total_conversions']:,} "
                f"{self._get_trend_indicator(current_stats['total_conversions'], previous_stats['total_conversions'])}",
                
                f"üí∏ –°—Ç–æ–∏–º–æ—Å—Ç—å: {self._format_currency(current_stats['avg_cost_per_conversion'])} "
                f"{self._get_trend_indicator(current_stats['avg_cost_per_conversion'], previous_stats['avg_cost_per_conversion'])}\n"
            ])
        
        # –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
        campaigns = self._get_campaign_stats(now, now)
        if campaigns:
            report.append("*–ê–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏:*")
            for campaign in campaigns[:3]:  # –¢–æ–ø 3 –∫–∞–º–ø–∞–Ω–∏–∏
                report.append(
                    f"üì± {campaign['campaign_name']}\n"
                    f"   –†–∞—Å—Ö–æ–¥—ã: {self._format_currency(campaign['spend'])}\n"
                    f"   CTR: {self._format_percentage(campaign['ctr'])}"
                )
        
        return "\n".join(report)
